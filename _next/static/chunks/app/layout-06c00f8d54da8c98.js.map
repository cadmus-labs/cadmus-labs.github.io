{"version":3,"file":"static/chunks/app/layout-06c00f8d54da8c98.js","mappings":"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","sources":["webpack://_N_E/?ca36","webpack://_N_E/./constants/routes.ts","webpack://_N_E/./components/RouterBreadcrumbs.tsx","webpack://_N_E/./components/WebVitals.tsx","webpack://_N_E/./components/theme/EmotionCacheProvider.tsx","webpack://_N_E/./components/theme/WebsiteThemeProvider.tsx","webpack://_N_E/./styles/main.css","webpack://_N_E/<anon>"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/home/runner/work/cadmus-labs.github.io/cadmus-labs.github.io/node_modules/next/dist/client/link.js\");\nimport(/* webpackMode: \"eager\" */ \"/home/runner/work/cadmus-labs.github.io/cadmus-labs.github.io/node_modules/next/dist/client/script.js\");\nimport(/* webpackMode: \"eager\" */ \"/home/runner/work/cadmus-labs.github.io/cadmus-labs.github.io/components/RouterBreadcrumbs.tsx\");\nimport(/* webpackMode: \"eager\" */ \"/home/runner/work/cadmus-labs.github.io/cadmus-labs.github.io/components/WebVitals.tsx\");\nimport(/* webpackMode: \"eager\" */ \"/home/runner/work/cadmus-labs.github.io/cadmus-labs.github.io/node_modules/@mui/material/node/index.js\");\nimport(/* webpackMode: \"eager\" */ \"/home/runner/work/cadmus-labs.github.io/cadmus-labs.github.io/components/theme/WebsiteThemeProvider.tsx\");\nimport(/* webpackMode: \"eager\" */ \"/home/runner/work/cadmus-labs.github.io/cadmus-labs.github.io/node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app/layout.tsx\\\",\\\"import\\\":\\\"Roboto\\\",\\\"arguments\\\":[{\\\"weight\\\":\\\"400\\\",\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"roboto\\\"}\");\nimport(/* webpackMode: \"eager\" */ \"/home/runner/work/cadmus-labs.github.io/cadmus-labs.github.io/styles/main.css\")","/*\n * Cadmus Labs - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Cadmus Labs.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Cadmus Labs.\n *\n * Website: https://cadmus-labs.github.io\n *\n * © 2023 Cadmus Labs. All rights reserved.\n */\nimport type { Route as NextRoute } from \"next\";\n\n/*\n * Internal model for type safety starts here\n */\n\ninterface _Route {\n    name: string;\n    path: NextRoute<string>;\n    subRoutes?: _Route[];\n}\n\nconst _Routes: _Route[] = [\n    {\n        name: \"Solutions\",\n        path: \"/solutions\",\n        subRoutes: [\n            {\n                name: \"Website Oracle\",\n                path: \"/solutions/website-oracle\",\n            },\n        ],\n    },\n];\n\n/*\n * Internal model for type safety ends here\n */\n\nexport interface Route {\n    name: string;\n    path: NextRoute<string>;\n    subRoutes?: Record<string, Route>;\n}\n\nconst buildRoutes = (currentRoutes: _Route[]): Record<string, Route> => {\n    const routesMap: Record<string, Route> = {};\n    currentRoutes.forEach((route) => {\n        routesMap[route.path] = {\n            name: route.name,\n            path: route.path,\n            subRoutes:\n                route.subRoutes === undefined\n                    ? undefined\n                    : buildRoutes(route.subRoutes),\n        };\n    });\n    return routesMap;\n};\n\nexport const Routes: Record<string, Route> = buildRoutes(_Routes);\n","\"use client\";\n/*\n * Cadmus Labs - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Cadmus Labs.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Cadmus Labs.\n *\n * Website: https://cadmus-labs.github.io\n *\n * © 2023 Cadmus Labs. All rights reserved.\n */\nimport { KeyboardArrowRight } from \"@mui/icons-material\";\nimport { Breadcrumbs, Typography } from \"@mui/material\";\nimport type { Route as NextRoute } from \"next\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport React from \"react\";\n\nimport { Routes, type Route } from \"@/constants/routes\";\n\nconst RouterBreadcrumbs = (): React.ReactElement | null => {\n    const pathname = usePathname();\n    const pathnames =\n        pathname == null ? [] : pathname.split(\"/\").filter((x) => x);\n\n    const breadcrumbs: Array<{ name: string; path?: NextRoute<string> }> = [\n        {\n            name: \"Home\",\n            path: pathnames.length > 0 ? \"/\" : undefined,\n        },\n    ];\n    if (pathnames.length > 0) {\n        const visitRoutes = (\n            currentRoutes: Record<string, Route>,\n            currentPathnames: string[],\n            currentBasePath: string,\n        ): void => {\n            if (currentPathnames.length > 0) {\n                const currentSubPath =\n                    currentBasePath + \"/\" + currentPathnames[0];\n                if (currentSubPath in currentRoutes) {\n                    const route = currentRoutes[currentSubPath];\n                    if (currentPathnames.length > 1) {\n                        breadcrumbs.push({\n                            name: route.name,\n                            path: currentSubPath as NextRoute<string>,\n                        });\n                        if (route.subRoutes !== undefined) {\n                            visitRoutes(\n                                route.subRoutes,\n                                currentPathnames.slice(1),\n                                currentSubPath,\n                            );\n                        }\n                    } else {\n                        breadcrumbs.push({\n                            name: route.name,\n                        });\n                    }\n                }\n            }\n        };\n        visitRoutes(Routes, pathnames, \"\");\n    }\n\n    return (\n        <Breadcrumbs\n            aria-label=\"breadcrumb\"\n            sx={{ my: 3 }}\n            separator={<KeyboardArrowRight />}\n        >\n            {breadcrumbs.map((breadcrumb) => {\n                return breadcrumb.path === undefined ? (\n                    <Typography color=\"textPrimary\" key={breadcrumb.name}>\n                        {breadcrumb.name}\n                    </Typography>\n                ) : (\n                    <Link passHref href={breadcrumb.path} key={breadcrumb.name}>\n                        {breadcrumb.name}\n                    </Link>\n                );\n            })}\n        </Breadcrumbs>\n    );\n};\n\nexport default RouterBreadcrumbs;\n","\"use client\";\n/*\n * Cadmus Labs - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Cadmus Labs.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Cadmus Labs.\n *\n * Website: https://cadmus-labs.github.io\n *\n * © 2023 Cadmus Labs. All rights reserved.\n */\nimport { useReportWebVitals } from \"next/web-vitals\";\nimport React from \"react\";\n\nconst WebVitals = (): React.ReactElement => {\n    useReportWebVitals((metric) => {\n        (window as any).gtag(\"event\", metric.name, {\n            value: Math.round(\n                metric.name === \"CLS\" ? metric.value * 1000 : metric.value,\n            ),\n            event_label: metric.id,\n            non_interaction: true,\n        });\n    });\n    return <React.Fragment />;\n};\n\nexport default WebVitals;\n","\"use client\";\n/*\n * Cadmus Labs - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Cadmus Labs.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Cadmus Labs.\n *\n * Website: https://cadmus-labs.github.io\n *\n * © 2023 Cadmus Labs. All rights reserved.\n */\nimport createCache, { type EmotionCache } from \"@emotion/cache\";\nimport { CacheProvider as DefaultCacheProvider } from \"@emotion/react\";\nimport { useServerInsertedHTML } from \"next/navigation\";\nimport * as React from \"react\";\n\nexport interface EmotionCacheProviderProps {\n    CacheProvider?: (props: {\n        value: EmotionCache;\n        children: React.ReactNode;\n    }) => React.JSX.Element | null;\n    children: React.ReactNode;\n}\n\nexport default function EmotionCacheProvider(\n    props: EmotionCacheProviderProps,\n): React.ReactElement {\n    const { CacheProvider = DefaultCacheProvider, children } = props;\n\n    const [registry] = React.useState(() => {\n        const cache = createCache({ key: \"css\" });\n        cache.compat = true;\n        const prevInsert = cache.insert;\n        let inserted: Array<{ name: string; isGlobal: boolean }> = [];\n        cache.insert = (...args) => {\n            const [selector, serialized] = args;\n            if (cache.inserted[serialized.name] === undefined) {\n                inserted.push({\n                    name: serialized.name,\n                    isGlobal: selector === undefined,\n                });\n            }\n            return prevInsert(...args);\n        };\n        const flush = (): Array<{ name: string; isGlobal: boolean }> => {\n            const prevInserted = inserted;\n            inserted = [];\n            return prevInserted;\n        };\n        return { cache, flush };\n    });\n\n    useServerInsertedHTML(() => {\n        const inserted = registry.flush();\n        if (inserted.length === 0) {\n            return null;\n        }\n        let styles = \"\";\n        let dataEmotionAttribute = registry.cache.key;\n\n        const globals: Array<{\n            name: string;\n            style: string;\n        }> = [];\n\n        inserted.forEach(({ name, isGlobal }) => {\n            const style = registry.cache.inserted[name];\n\n            if (typeof style !== \"boolean\") {\n                if (isGlobal) {\n                    globals.push({ name, style });\n                } else {\n                    styles += style;\n                    dataEmotionAttribute += ` ${name}`;\n                }\n            }\n        });\n\n        return (\n            <React.Fragment>\n                {globals.map(({ name, style }) => (\n                    <style\n                        key={name}\n                        data-emotion={`${registry.cache.key}-global ${name}`}\n                        dangerouslySetInnerHTML={{ __html: style }}\n                    />\n                ))}\n                {styles !== undefined && (\n                    <style\n                        data-emotion={dataEmotionAttribute}\n                        dangerouslySetInnerHTML={{ __html: styles }}\n                    />\n                )}\n            </React.Fragment>\n        );\n    });\n\n    return <CacheProvider value={registry.cache}>{children}</CacheProvider>;\n}\n","\"use client\";\n/*\n * Cadmus Labs - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Cadmus Labs.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Cadmus Labs.\n *\n * Website: https://cadmus-labs.github.io\n *\n * © 2023 Cadmus Labs. All rights reserved.\n */\nimport {\n    createTheme,\n    CssBaseline,\n    StyledEngineProvider,\n    type Theme,\n    ThemeProvider,\n    useMediaQuery,\n} from \"@mui/material\";\nimport { grey, deepPurple } from \"@mui/material/colors\";\nimport React, { useMemo, useEffect, useState, useContext } from \"react\";\n\nimport EmotionCacheProvider from \"./EmotionCacheProvider\";\n\nexport type ColorScheme = \"dark\" | \"light\";\nconst colorSchemes = [\"dark\", \"light\"];\n\nconst COLOR_SCHEME_KEY = \"COLOR_SCHEME\";\n\nconst getStoredColorScheme = (): ColorScheme | null => {\n    let storedColorScheme: string | null;\n    try {\n        storedColorScheme = localStorage.getItem(COLOR_SCHEME_KEY);\n    } catch {\n        storedColorScheme = null;\n    }\n    return storedColorScheme !== null &&\n        colorSchemes.includes(storedColorScheme)\n        ? (storedColorScheme as ColorScheme)\n        : null;\n};\n\nconst createWebsiteTheme = (colorScheme: ColorScheme): Theme => {\n    return createTheme({\n        palette: {\n            mode: colorScheme,\n            primary: deepPurple,\n            secondary: deepPurple,\n        },\n        components: {\n            MuiLink: {\n                styleOverrides: {\n                    root: {\n                        color: grey[700],\n                        textDecoration: \"none\",\n                    },\n                },\n            },\n        },\n    });\n};\n\ninterface WebsiteThemeContext {\n    theme: Theme;\n    colorScheme: ColorScheme;\n    setColorScheme: (newColorScheme: ColorScheme) => void;\n}\n\nconst defaultColorScheme = getStoredColorScheme() ?? \"light\";\n\nconst WebsiteTheme = React.createContext<WebsiteThemeContext>({\n    theme: createWebsiteTheme(defaultColorScheme),\n    colorScheme: defaultColorScheme,\n    setColorScheme: () => {\n        throw Error(\"Setting color theme not implemented\");\n    },\n});\n\ninterface WebsiteThemeProviderProps {\n    children: React.ReactNode;\n}\n\nconst WebsiteThemeProvider = ({\n    children,\n}: WebsiteThemeProviderProps): React.ReactElement => {\n    const preferedColorScheme: ColorScheme = useMediaQuery(\n        \"(prefers-color-scheme: dark)\",\n    )\n        ? \"dark\"\n        : \"light\";\n    const initialStoredColorScheme = getStoredColorScheme();\n\n    const [colorScheme, setColorScheme] = useState<ColorScheme>(\n        initialStoredColorScheme === null\n            ? preferedColorScheme\n            : initialStoredColorScheme,\n    );\n\n    const storageListener = (): void => {\n        const storedColorScheme = getStoredColorScheme();\n        if (storedColorScheme !== null) {\n            setColorScheme(storedColorScheme);\n        }\n    };\n    useEffect(() => {\n        window.addEventListener(\"storage\", storageListener);\n        return (): void => {\n            window.removeEventListener(\"storage\", storageListener);\n        };\n    });\n\n    const theme = useMemo(() => createWebsiteTheme(colorScheme), [colorScheme]);\n    return (\n        <EmotionCacheProvider>\n            <StyledEngineProvider injectFirst>\n                <ThemeProvider theme={theme}>\n                    <CssBaseline />\n                    <WebsiteTheme.Provider\n                        value={{\n                            theme,\n                            colorScheme,\n                            setColorScheme: (\n                                newColorScheme: ColorScheme,\n                            ): void => {\n                                try {\n                                    localStorage.setItem(\n                                        COLOR_SCHEME_KEY,\n                                        newColorScheme,\n                                    );\n                                } catch {}\n                                setColorScheme(newColorScheme);\n                            },\n                        }}\n                    >\n                        {children}\n                    </WebsiteTheme.Provider>\n                </ThemeProvider>\n            </StyledEngineProvider>\n        </EmotionCacheProvider>\n    );\n};\n\nexport const useWebsiteTheme = (): WebsiteThemeContext => {\n    return useContext(WebsiteTheme);\n};\n\nexport default WebsiteThemeProvider;\n","// extracted by mini-css-extract-plugin"],"names":["Promise","resolve","then","__webpack_require__","t","bind","buildRoutes","currentRoutes","routesMap","forEach","route","path","name","subRoutes","undefined","Routes","components_RouterBreadcrumbs","pathname","usePathname","pathnames","split","filter","x","breadcrumbs","length","visitRoutes","currentPathnames","currentBasePath","currentSubPath","push","slice","jsx_runtime","jsx","Breadcrumbs","aria-label","sx","my","separator","KeyboardArrowRight","map","breadcrumb","Typography","color","Link","passHref","href","__webpack_exports__","useReportWebVitals","metric","window","gtag","value","Math","round","event_label","id","non_interaction","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","React","getStoredColorScheme","EmotionCacheProvider","props","_props_CacheProvider","CacheProvider","DefaultCacheProvider","children","registry","cache","createCache","key","compat","prevInsert","insert","inserted","args","selector","serialized","isGlobal","_to_consumable_array","_","flush","prevInserted","useServerInsertedHTML","styles","dataEmotionAttribute","globals","param","style","concat","jsxs","data-emotion","dangerouslySetInnerHTML","__html","colorSchemes","COLOR_SCHEME_KEY","storedColorScheme","localStorage","getItem","e","includes","createWebsiteTheme","colorScheme","createTheme","palette","mode","primary","deepPurple","secondary","components","MuiLink","styleOverrides","root","grey","textDecoration","defaultColorScheme","WebsiteTheme","theme","setColorScheme","Error","useWebsiteTheme","useContext","theme_WebsiteThemeProvider","preferedColorScheme","useMediaQuery","initialStoredColorScheme","useState","storageListener","useEffect","addEventListener","removeEventListener","useMemo","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","Provider","newColorScheme","setItem"],"sourceRoot":""}