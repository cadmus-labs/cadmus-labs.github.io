{"version":3,"file":"static/chunks/app/page-4c7ccfb625602177.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/material/styles/useTheme.js","webpack://_N_E/?254b","webpack://_N_E/./node_modules/@mui/material/Grid/GridContext.js","webpack://_N_E/./node_modules/@mui/material/Grid/gridClasses.js","webpack://_N_E/./node_modules/@mui/material/Grid/Grid.js","webpack://_N_E/./app/page.tsx","webpack://_N_E/./node_modules/next/dist/shared/lib/image-external.js","webpack://_N_E/./node_modules/next/image.js","webpack://_N_E/./node_modules/next/link.js","webpack://_N_E/<anon>"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { useTheme as useThemeSystem } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nimport THEME_ID from './identifier';\nexport default function useTheme() {\n  const theme = useThemeSystem(defaultTheme);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme[THEME_ID] || theme;\n}","import(/* webpackMode: \"eager\" */ \"/home/runner/work/cadmus-labs.github.io/cadmus-labs.github.io/app/page.tsx\")","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst GridContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\nexport default GridContext;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth',\n// spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`),\n// direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`),\n// wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`),\n// grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","'use client';\n\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"rowSpacing\", \"spacing\", \"wrap\", \"zeroMinWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n    if (!size) {\n      return globalStyles;\n    }\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      }\n      // Keep 7 significant numbers.\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      }\n\n      // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n      styles = _extends({\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width\n      }, more);\n    }\n\n    // No need for a media query for the first size.\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n    return output;\n  });\n}\n\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\nfunction extractZeroValueBreakpointKeys({\n  breakpoints,\n  values\n}) {\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        marginTop: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK2;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK2 = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK2.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  }\n  // in case of object `spacing`\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n}\n\n// Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = [];\n\n    // in case of grid item\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap !== 'wrap' && {\n  flexWrap: ownerState.wrap\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  }\n  // in case of object `spacing`\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = [];\n\n  // in case of grid item\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n  const {\n      className,\n      columns: columnsProp,\n      columnSpacing: columnSpacingProp,\n      component = 'div',\n      container = false,\n      direction = 'row',\n      item = false,\n      rowSpacing: rowSpacingProp,\n      spacing = 0,\n      wrap = 'wrap',\n      zeroMinWidth = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext);\n\n  // columns set with default breakpoint unit of 12\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n  const otherFiltered = _extends({}, other);\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing\n  }, breakpointsValues, {\n    breakpoints: breakpoints.keys\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref\n    }, otherFiltered))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid);\n  // eslint-disable-next-line no-useless-concat\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\nexport default Grid;","\"use client\";\n/*\n * Cadmus Labs - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Cadmus Labs.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Cadmus Labs.\n *\n * Website: https://cadmus-labs.github.io\n *\n * © 2023 Cadmus Labs. All rights reserved.\n */\nimport {\n    Box,\n    Button,\n    Container,\n    Grid,\n    type Theme,\n    Typography,\n} from \"@mui/material\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\n\nconst Home = (): React.ReactElement => (\n    <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"space-evenly\"\n        alignItems=\"stretch\"\n        sx={{\n            height: (theme: Theme) =>\n                `calc(70vh - ${theme.mixins.toolbar.minHeight ?? 0}px)`,\n        }}\n    >\n        <Grid\n            item\n            xs={12}\n            md={6}\n            justifyContent=\"space-evenly\"\n            alignItems=\"stretch\"\n        >\n            <Container\n                sx={{\n                    position: \"relative\",\n                    height: \"100%\",\n                }}\n            >\n                <Image\n                    src=\"/assets/empower-with-solutions.svg\"\n                    fill={true}\n                    alt=\"Empower with Solutions\"\n                    style={{ objectFit: \"contain\" }}\n                />\n            </Container>\n        </Grid>\n        <Grid\n            container\n            item\n            direction={\"column\"}\n            xs={12}\n            md={6}\n            justifyContent=\"space-evenly\"\n            alignItems=\"stretch\"\n        >\n            <Grid item xs={6} sx={{ position: \"relative\" }}>\n                <Typography\n                    sx={{\n                        position: \"absolute\",\n                        bottom: \"1em\",\n                        left: \"1em\",\n                    }}\n                >\n                    Empowering You through Intelligent Software Solutions\n                </Typography>\n            </Grid>\n            <Grid item xs={6} sx={{ position: \"relative\" }}>\n                <Box\n                    sx={{\n                        position: \"absolute\",\n                        top: \"1em\",\n                        left: \"1em\",\n                    }}\n                >\n                    <Link href=\"/solutions\" passHref>\n                        <Button variant=\"contained\">View Solutions</Button>\n                    </Link>\n                </Box>\n            </Grid>\n        </Grid>\n    </Grid>\n);\n\nexport default Home;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    default: null,\n    unstable_getImgProps: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    default: function() {\n        return _default;\n    },\n    unstable_getImgProps: function() {\n        return unstable_getImgProps;\n    }\n});\nconst _interop_require_default = require(\"@swc/helpers/_/_interop_require_default\");\nconst _getimgprops = require(\"./get-img-props\");\nconst _warnonce = require(\"./utils/warn-once\");\nconst _imagecomponent = require(\"../../client/image-component\");\nconst _imageloader = /*#__PURE__*/ _interop_require_default._(require(\"next/dist/shared/lib/image-loader\"));\nconst unstable_getImgProps = (imgProps)=>{\n    (0, _warnonce.warnOnce)(\"Warning: unstable_getImgProps() is experimental and may change or be removed at any time. Use at your own risk.\");\n    const { props  } = (0, _getimgprops.getImgProps)(imgProps, {\n        defaultLoader: _imageloader.default,\n        // This is replaced by webpack define plugin\n        imgConf: process.env.__NEXT_IMAGE_OPTS\n    });\n    for (const [key, value] of Object.entries(props)){\n        if (value === undefined) {\n            delete props[key];\n        }\n    }\n    return {\n        props\n    };\n};\nconst _default = _imagecomponent.Image;\n\n//# sourceMappingURL=image-external.js.map","module.exports = require('./dist/shared/lib/image-external')\n","module.exports = require('./dist/client/link')\n"],"names":["useTheme","theme","_mui_system__WEBPACK_IMPORTED_MODULE_1__","Z","_defaultTheme__WEBPACK_IMPORTED_MODULE_2__","_identifier__WEBPACK_IMPORTED_MODULE_3__","Promise","resolve","then","__webpack_require__","bind","GridContext","react","createContext","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","gridClasses","generateUtilityClasses","SPACINGS","map","spacing","DIRECTIONS","direction","WRAPS","wrap","size","_excluded","getOffset","val","parse","parseFloat","String","replace","extractZeroValueBreakpointKeys","breakpoints","values","nonZeroKey","Object","keys","forEach","key","sortedBreakpointKeysByValue","sort","a","b","slice","indexOf","GridRoot","styled","ZP","name","overridesResolver","props","styles","ownerState","container","item","zeroMinWidth","spacingStyles","resolveSpacingStyles","Number","isNaN","breakpoint","value","push","breakpointsStyles","root","esm_extends","boxSizing","display","flexWrap","width","margin","minWidth","directionValues","P$","k9","propValue","output","flexDirection","Grid_gridClasses","maxWidth","rowSpacing","zeroValueBreakpointKeys","rowSpacingValues","_zeroValueBreakpointK","themeSpacing","marginTop","paddingTop","includes","columnSpacing","columnSpacingValues","_zeroValueBreakpointK2","marginLeft","paddingLeft","reduce","globalStyles","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","Math","round","more","fullWidth","assign","up","useUtilityClasses","classes","spacingClasses","resolveSpacingClasses","className","breakpointsClasses","slots","composeClasses","Grid","forwardRef","inProps","ref","themeProps","useThemeProps","extendSxProp","columnsProp","columnSpacingProp","component","rowSpacingProp","other","objectWithoutPropertiesLoose","columnsContext","useContext","breakpointsValues","otherFiltered","jsx_runtime","jsx","Grid_GridContext","Provider","children","clsx","as","page","jsxs","justifyContent","alignItems","sx","height","concat","mixins","toolbar","minHeight","xs","md","Container","position","Image","src","fill","alt","style","objectFit","Typography","bottom","left","Box","top","Link","href","passHref","Button","variant","_export","target","all","defineProperty","enumerable","get","exports","default","_default","unstable_getImgProps","_interop_require_default","require","_getimgprops","_warnonce","_imagecomponent","_imageloader","_","imgProps","warnOnce","getImgProps","defaultLoader","imgConf","process","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","next","done","_step_value","_sliced_to_array","err","return","module"],"sourceRoot":""}