{"version":3,"file":"static/chunks/app/error-cd64aad92f925fc9.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/system/esm/Container/createContainer.js","webpack://_N_E/./node_modules/@mui/material/Container/Container.js","webpack://_N_E/./node_modules/@mui/system/esm/styled.js","webpack://_N_E/?3b63","webpack://_N_E/./app/error.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import(/* webpackMode: \"eager\" */ \"/home/runner/work/cadmus-labs.github.io/cadmus-labs.github.io/app/error.tsx\")","\"use client\";\n/*\n * Cadmus Labs - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Cadmus Labs.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Cadmus Labs.\n *\n * Website: https://cadmus-labs.github.io\n *\n * © 2023 Cadmus Labs. All rights reserved.\n */\nimport { Button, Typography, type Theme, Container, Box } from \"@mui/material\";\n\ninterface ErrorProps {\n    reset: () => void;\n}\n\nconst Error = ({ reset }: ErrorProps): React.ReactElement => (\n    <Container\n        sx={{\n            height: (theme: Theme) =>\n                `calc(100vh - ${theme.spacing(15)} - ${\n                    theme.typography.fontSize\n                }px - ${theme.mixins.toolbar.minHeight ?? 0}px)`,\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n        }}\n    >\n        <Box sx={{ textAlign: \"center\" }}>\n            <Typography sx={{ my: 2 }}>Something went wrong</Typography>\n            <Button onClick={reset}>Try Again</Button>\n        </Box>\n    </Container>\n);\n\nexport default Error;\n"],"names":["_excluded","defaultTheme","createTheme","Z","defaultCreateStyledComponent","styled","name","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemeProps","useUtilityClasses","componentName","classes","slots","composeClasses","generateUtilityClass","createContainer","options","createStyledComponent","ContainerRoot","theme","esm_extends","width","marginLeft","boxSizing","marginRight","display","paddingLeft","spacing","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpointValueKey","value","unit","Math","max","xs","Container","react","forwardRef","ref","className","component","other","objectWithoutPropertiesLoose","jsx_runtime","jsx","as","clsx","styles_styled","ZP","utils_capitalize","styles_useThemeProps","Container_Container","_createStyled__WEBPACK_IMPORTED_MODULE_0__","__webpack_exports__","Promise","resolve","then","__webpack_require__","bind","param","reset","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","sx","height","typography","fontSize","concat","mixins","toolbar","minHeight","justifyContent","alignItems","jsxs","Box","textAlign","Typography","my","Button","onClick"],"sourceRoot":""}